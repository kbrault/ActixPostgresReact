services:
  backend:
    build: ${BACKEND_BUILD}
    container_name: ${BACKEND_CONTAINER_NAME}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.actix.rule=Host(`${HOST_ADDRESS}`)"
      - "traefik.http.routers.actix.entrypoints=web"
      - "traefik.http.services.actix.loadbalancer.server.port=${BACKEND_PORT}"
    depends_on:
      - postgres
    networks:
      - ${BACKEND_NETWORK}
      - ${FRONTEND_NETWORK}
      - ${TRAEFIK_NETWORK}

  postgres:
    image: ${POSTGRES_IMAGE}
    container_name: ${POSTGRES_CONTAINER_NAME}
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - ${BACKEND_NETWORK}

  frontend:
    build: ${FRONTEND_BUILD}
    container_name: ${FRONTEND_CONTAINER_NAME}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${HOST_ADDRESS}`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=${FRONTEND_SERVER_PORT}"
    networks:
      - ${FRONTEND_NETWORK}
      - ${TRAEFIK_NETWORK}

  traefik:
    image: ${TRAEFIK_IMAGE}
    container_name: ${TRAEFIK_CONTAINER_NAME}
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:${TRAEFIK_WEB_PORT}"
      - "--entrypoints.traefik.address=:${TRAEFIK_API_PORT}"
    ports:
      - "${TRAEFIK_WEB_PORT}:${TRAEFIK_WEB_PORT}"
      - "${TRAEFIK_API_PORT}:${TRAEFIK_API_PORT}"
    networks:
      - ${BACKEND_NETWORK}
      - ${FRONTEND_NETWORK}
      - ${TRAEFIK_NETWORK}
    volumes:
      - "${DOCKER_SOCKET_PATH}:${DOCKER_SOCKET_PATH}"
    restart: always

volumes:
  db:

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
  traefik-network:
    driver: bridge
